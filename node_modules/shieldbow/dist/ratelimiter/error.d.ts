import { AxiosHeaders, type AxiosResponse, type RawAxiosRequestHeaders } from 'axios';
/**
 * API error class.
 */
export declare class ApiError extends Error {
    /**
     * The requested URL.
     */
    readonly url: string;
    /**
     * The headers sent with the request.
     */
    readonly headers: RawAxiosRequestHeaders;
    /**
     * The received response object.
     */
    readonly response?: AxiosResponse;
    constructor(status: number, url: string, headers: RawAxiosRequestHeaders, response?: AxiosResponse<any>);
}
/**
 * A mock rate limit error response.
 * This is sent by the rate limiter when the rate limit is exceeded.
 * If it is an actual 429 response by the API, it is a problem with the rate limiter.
 */
export declare const mockRatelimitedResponse: {
    data: undefined;
    status: number;
    statusText: string;
    headers: {
        'Retry-After': string;
        'X-App-Rate-Limit': string;
        'X-App-Rate-Limit-Count': string;
        'X-Method-Rate-Limit': string;
        'X-Method-Rate-Limit-Count': string;
        'X-Rate-Limit-Type': string;
    };
    config: {
        headers: AxiosHeaders;
    };
};
//# sourceMappingURL=error.d.ts.map