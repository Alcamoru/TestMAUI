import { Collection } from '@discordjs/collection';
import type { ChallengeConfigData, Locales, TierType } from '../../types';
import type { Client } from '../../client';
/**
 * A class representing the details of a challenge.
 */
export declare class Challenge {
    /**
     * The ID of the challenge.
     */
    readonly id: number;
    /**
     * The names of the challenge mapped by locale.
     */
    readonly names: Collection<Locales, string>;
    /**
     * The long descriptions of the challenge mapped by locale.
     */
    readonly descriptions: Collection<Locales, string>;
    /**
     * The short descriptions of the challenge mapped by locale.
     */
    readonly shortDescriptions: Collection<Locales, string>;
    /**
     * The state of the challenge.
     */
    readonly state: 'ENABLED' | 'DISABLED';
    /**
     * Whether the challenge has a leaderboard.
     */
    readonly leaderboard: boolean;
    /**
     * The thresholds of the challenge mapped by tier.
     */
    readonly thresholds: Collection<TierType | 'NONE', number>;
    /**
     * The percentile of player base that have reached a specific tier (mapped by tier).
     */
    readonly percentiles: Collection<TierType | "NONE", number>;
    private readonly client;
    constructor(client: Client, data: ChallengeConfigData, percentiles: {
        [key in TierType]: number;
    });
    /**
     * The name of the challenge (as per the client's locale).
     */
    get name(): string | undefined;
    /**
     * The long description of the challenge (as per the client's locale).
     */
    get description(): string | undefined;
    /**
     * The short description of the challenge (as per the client's locale).
     */
    get shortDescription(): string | undefined;
}
//# sourceMappingURL=Challenge.d.ts.map