"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChampionMastery = void 0;
/**
 * A representation of a summoner's mastery over a champion.
 */
class ChampionMastery {
    /**
     * Creates a new ChampionMastery instance.
     * @param data - The raw champion mastery data from the API.
     * @param champion - The champion these details are for.
     */
    constructor(data, champion) {
        /**
         * The champion these details are for.
         */
        Object.defineProperty(this, "champion", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
         * The mastery level, can be anywhere between 1 and 7.
         */
        Object.defineProperty(this, "level", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
         * The total number of mastery points earned by this summoner on the champion.
         */
        Object.defineProperty(this, "points", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
         * The number of mastery points earned by the summoner since they progressed from the previous level.
         */
        Object.defineProperty(this, "pointsSinceLastLevel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
         * The number of mastery points required by the summoner to achieve the next level.
         */
        Object.defineProperty(this, "pointsToNextLevel", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
         * The time this summoner played the champion last time.
         */
        Object.defineProperty(this, "lastPlayedAt", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
         * Whether the summoner has earned the chest for this champion this season.
         */
        Object.defineProperty(this, "chestGranted", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
         * This is only applicable if the mastery level is 5 or 6.
         * The number of tokens achieved for reaching the next mastery level.
         */
        Object.defineProperty(this, "tokens", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.champion = champion;
        this.level = data.championLevel;
        this.points = data.championPoints;
        this.pointsSinceLastLevel = data.championPointsSinceLastLevel;
        this.pointsToNextLevel = data.championPointsUntilNextLevel;
        this.lastPlayedAt = new Date(data.lastPlayTime);
        this.chestGranted = data.chestGranted;
        this.tokens = data.tokensEarned;
    }
}
exports.ChampionMastery = ChampionMastery;
//# sourceMappingURL=ChampionMastery.js.map