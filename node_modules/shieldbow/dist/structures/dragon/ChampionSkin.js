"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChampionSkin = void 0;
/**
 * A representation of a champion's skin (visual modification).
 */
class ChampionSkin {
    /**
     * Creates a new champion skin instance.
     * @param champ - The champion this skin belongs to.
     * @param data - The raw skin data from data dragon.
     * @param meraki - The raw skin data from meraki.
     */
    constructor(champ, data, meraki) {
        /**
         * The champion this skin belongs to.
         */
        Object.defineProperty(this, "champ", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
         * The numerical ID of this skin.
         */
        Object.defineProperty(this, "id", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
         * The name of the skin displayed in game. U
         */
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
         * The ID this skin is identified by internally (the game).
         */
        Object.defineProperty(this, "internalId", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
         * The skin's chromas.
         */
        Object.defineProperty(this, "chromas", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
         * The availability of this skin - Available or Legacy.
         */
        Object.defineProperty(this, "availability", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
         * Whether the skin is the base skin.
         */
        Object.defineProperty(this, "isBase", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
         * The in-game price of the skin.
         */
        Object.defineProperty(this, "price", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
         *  How rare is this skin - 'Epic', 'Legendary', etc.
         */
        Object.defineProperty(this, "rarity", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
         * The lore of the champion in the world of this skin line.
         */
        Object.defineProperty(this, "lore", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
         * The default splash art for the skin.
         */
        Object.defineProperty(this, "splashArt", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
         * The splash art for the skin zoomed in on the champion to make it centered.
         */
        Object.defineProperty(this, "centeredSplashArt", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
         * The loading screen image.
         */
        Object.defineProperty(this, "loadingScreen", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /**
         * The loading screen image with skin border (if available).
         */
        Object.defineProperty(this, "vintageLoadingScreen", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.champ = champ;
        this.id = data.num;
        this.name = data.name;
        this.availability = meraki.availability;
        this.isBase = meraki.isBase;
        this.price = { rp: meraki.cost, sale: meraki.sale };
        this.rarity = meraki.rarity;
        this.lore = meraki.lore;
        this.splashArt = meraki.uncenteredSplashPath;
        this.centeredSplashArt = meraki.splashPath;
        this.loadingScreen = meraki.loadScreenPath;
        this.vintageLoadingScreen = meraki.loadScreenVintagePath || undefined;
        this.internalId = data.id;
        this.chromas = meraki.chromas
            .filter((c) => c !== null)
            .map((c) => ({ id: c.id, name: c.name, image: c.chromaPath }));
    }
}
exports.ChampionSkin = ChampionSkin;
//# sourceMappingURL=ChampionSkin.js.map