import type { GameMode, SummonerSpellData } from '../../types';
import type { Client } from '../../client';
/**
 * A representation of an in-game summoner spell.
 */
export declare class SummonerSpell {
    /**
     * The ID of this summoner spell.
     */
    readonly id: string;
    /**
     * The numerical ID of this summoner spell.
     */
    readonly key: number;
    /**
     * The name of this summoner spell.
     */
    readonly name: string;
    /**
     * The description of this summoner spell.
     */
    readonly description: string;
    /**
     * The raw tooltip of this summoner spell.
     * This contains some HTML-like tags to help view this better on webpages.
     *
     * Even though, these are supposed to be more detailed than the {@link SummonerSpell.description}.
     * It is not recommended using either this OR {@link SummonerSpell.tooltip}.
     * This is because they contain placeholders without values to fill them with.
     * Use {@link SummonerSpell.description} instead.
     *
     * See {@link SummonerSpell.tooltip | tooltip} to view this with the HTML-like tags stripped out.
     */
    readonly rawTooltip: string;
    /**
     * The cooldown of this summoner spell (in seconds)
     */
    readonly cooldown: number;
    /**
     * The level of this summoner spell.
     * This is the summoner level at which you unlock this spell.
     */
    readonly summonerLevel: number;
    /**
     * The game modes you can pick this summoner spell in.
     */
    readonly modes: GameMode[];
    /**
     * Number of times you can use this spell before it goes on a cooldown.
     */
    readonly maxAmmo: number;
    /**
     * The range of this spell, i.e. how many units far away can you cast this from.
     */
    readonly range: number;
    /**
     * A link to the image that represents this summoner spell.
     */
    readonly image: string;
    /**
     * Creates a new Summoner Spell instance.
     * @param client - The client that requested this data.
     * @param data - The raw summoner spell data from the API.
     */
    constructor(client: Client, data: SummonerSpellData);
    /**
     * The tooltip of this summoner spell.
     * This does not contain the HTML-like tags to help view this better on console and other output media.
     *
     * See {@link SummonerSpell.rawTooltip | rawTooltip} to view this with the HTML-like tags included.
     */
    get tooltip(): string;
}
//# sourceMappingURL=SummonerSpell.d.ts.map